name: sonarqube

services:
  sonarqube:
    build:
      context: .
      dockerfile: Dockerfile
      target: sonarqube
    restart: always
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SONAR_JDBC_USERNAME: ${POSTGRES_USER}
      SONAR_JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    ulimits:
      nproc: 8192
      nofile:
        soft: 131072
        hard: 131072
  db:
    build:
      context: .
      dockerfile: Dockerfile
      target: db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
  proxy:
    build:
      context: .
      dockerfile: Dockerfile
      target: proxy
    restart: always
    depends_on:
      - sonarqube
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - ${NGINX_PORT_EXPOSE}
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_SSL_CRT=${NGINX_SSL_CRT}
      - NGINX_SSL_KEY=${NGINX_SSL_KEY}

volumes:
  sonarqube_conf:
    name: sonarqube_conf
  sonarqube_data:
    name: sonarqube_data
  sonarqube_extensions:
    name: sonarqube_extensions
  sonarqube_logs:
    name: sonarqube_logs
  postgresql:
    name: postgresql
  postgresql_data:
    name: postgresql_data
